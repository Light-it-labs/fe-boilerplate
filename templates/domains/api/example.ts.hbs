import type { ServiceResponse } from "~/config/api";
import { api } from "~/config/api";

export interface Base{{pascalCase name}} {
  id: string;
  name: string;
  address: string;
}

export interface Base{{pascalCase name}}ListParams {
  page?: number;
}

const URL = "/{{kebabCase name}}";

export const get{{pascalCase name}}List = async (params: Base{{pascalCase name}}ListParams) => {
  const { data } = await api.get<ServiceResponse<Base{{pascalCase name}}[]>>(URL, {
    params,
  });

  return data.data;
};

export const get{{pascalCase name}}Detail = async ({{camelCase name}}Id: string) => {
  const { data } = await api.get<ServiceResponse<Base{{pascalCase name}}>>(
    URL.concat(["/", {{camelCase name}}Id].join("")),
  );

  return data.data;
};

export const create{{pascalCase name}} = async (body: Omit<Base{{pascalCase name}}, "id">) => {
  const { data } = await api.post<ServiceResponse<Base{{pascalCase name}}>>(
    URL,
    body,
  );

  return data.data;
};

export const update{{pascalCase name}} = async (body: Base{{pascalCase name}}) => {
  const { data } = await api.put<ServiceResponse<Base{{pascalCase name}}>>(
    URL.concat(["/", body.id].join("")),
    body,
  );

  return data.data;
};

export const delete{{pascalCase name}} = async ({{camelCase name}}Id: string) => {
  const { data } = await api.delete<ServiceResponse<void>>(
    URL.concat(["/", {{camelCase name}}Id].join("")),
  );

  return data.status;
};
